// Enhanced health query processor with language detection for rural areas
export async function processHealthQuery(query, isVoiceInput = false, detectedLanguage = 'hinglish') {
    try {
        // First, validate if query is health/education related
        const queryValidation = validateHealthQuery(query);
        
        if (!queryValidation.isValid) {
            return {
                message: getLocalizedRedirectMessage(detectedLanguage),
                confidence: 0.95,
                category: 'redirect'
            };
        }

        // Enhanced call to Python health processor with language context
        const response = await fetch(`${process.env.PYTHON_BACKEND_URL || 'http://localhost:8000'}/process-health-query`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.HEALTH_API_KEY || ''}`
            },
            body: JSON.stringify({
                query: query,
                detected_language: detectedLanguage,
                is_voice_input: isVoiceInput,
                country: 'india',
                target_audience: 'rural',
                response_language: detectedLanguage
            })
        });

        if (!response.ok) {
            throw new Error(`Python backend error: ${response.status}`);
        }

        const data = await response.json();
        return {
            message: data.response || data.message,
            confidence: data.confidence || 0.75,
            category: 'health',
            language: detectedLanguage
        };

    } catch (error) {
        console.error('Health processor error:', error);
        
        // Enhanced fallback response system for rural areas
        return generateRuralFallbackResponse(query, detectedLanguage);
    }
}

function validateHealthQuery(query) {
    const queryLower = query.toLowerCase();
    
    // Health-related keywords in Hindi and English
    const healthKeywords = [
        // Hindi health terms
        'рд╕реНрд╡рд╛рд╕реНрдереНрдп', 'рдмреАрдорд╛рд░реА', 'рджрд╡рд╛', 'рдбреЙрдХреНрдЯрд░', 'рдЗрд▓рд╛рдЬ', 'рдмреБрдЦрд╛рд░', 'рджрд░реНрдж', 'рд╕рд┐рд░рджрд░реНрдж', 
        'рдкреЗрдЯ', 'рдЦрд╛рдВрд╕реА', 'рдЬреБрдХрд╛рдо', 'рдордзреБрдореЗрд╣', 'рд░рдХреНрддрдЪрд╛рдк', 'рд╣реГрджрдп', 'рджрд┐рд▓', 'рд╕рд╛рдВрд╕', 'рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛',
        'рдмрдЪреНрдЪреЗ', 'рдЯреАрдХрд╛', 'рд╡реИрдХреНрд╕реАрди', 'рдкреЛрд╖рдг', 'рднреЛрдЬрди', 'рд╡рд┐рдЯрд╛рдорд┐рди', 'рдХреИрд▓реНрд╢рд┐рдпрдо', 'рдЖрдпрд░рди',
        
        // English health terms
        'health', 'disease', 'medicine', 'doctor', 'treatment', 'fever', 'pain', 'headache',
        'stomach', 'cough', 'cold', 'diabetes', 'pressure', 'heart', 'breathing', 'pregnancy',
        'child', 'vaccine', 'nutrition', 'food', 'vitamin', 'calcium', 'iron',
        
        // Education terms
        'рд╢рд┐рдХреНрд╖рд╛', 'рдкрдврд╝рд╛рдИ', 'рд╕реНрдХреВрд▓', 'рдХреЙрд▓реЗрдЬ', 'рд╡рд┐рд╢реНрд╡рд╡рд┐рджреНрдпрд╛рд▓рдп', 'рдкрд░реАрдХреНрд╖рд╛', 'рдХрд┐рддрд╛рдм',
        'education', 'study', 'school', 'college', 'university', 'exam', 'book'
    ];
    
    // Non-health topics to redirect
    const nonHealthKeywords = [
        'movie', 'film', 'рд╕рд┐рдиреЗрдорд╛', 'рдлрд┐рд▓реНрдо', 'рдЧрд╛рдирд╛', 'song', 'music', 'рд╕рдВрдЧреАрдд',
        'cricket', 'football', 'sports', 'рдЦреЗрд▓', 'politics', 'рд░рд╛рдЬрдиреАрддрд┐', 'election',
        'weather', 'рдореМрд╕рдо', 'joke', 'comedy', 'рдордЬрд╛рдХ', 'entertainment', 'рдордиреЛрд░рдВрдЬрди'
    ];
    
    // Check for non-health topics first
    const hasNonHealthKeywords = nonHealthKeywords.some(keyword => 
        queryLower.includes(keyword)
    );
    
    if (hasNonHealthKeywords) {
        return {
            isValid: false,
            redirectMessage: "рдореИрдВ рдПрдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХ рд╣реВрдВ рдФрд░ рдХреЗрд╡рд▓ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдФрд░ рд╢рд┐рдХреНрд╖рд╛ рд╕рдВрдмрдВрдзреА рдкреНрд░рд╢реНрдиреЛрдВ рдХрд╛ рдЙрддреНрддрд░ рджреЗрддрд╛ рд╣реВрдВред ЁЯПе\n\nрдХреГрдкрдпрд╛ рдЕрдкрдиреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд╕реНрдпрд╛, рдмреАрдорд╛рд░реА, рджрд╡рд╛рдИ, рдпрд╛ рд╢рд┐рдХреНрд╖рд╛ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВред рдореИрдВ рдЧреНрд░рд╛рдореАрдг рдХреНрд╖реЗрддреНрд░реЛрдВ рдХреЗ рд▓реЛрдЧреЛрдВ рдХреА рдорджрдж рдХреЗ рд▓рд┐рдП рдмрдирд╛рдпрд╛ рдЧрдпрд╛ рд╣реВрдВред\n\nЁЯУЭ рдЖрдк рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВ:\nтАв рдмреБрдЦрд╛рд░, рд╕рд░реНрджреА-рдЬреБрдХрд╛рдо рдХрд╛ рдЗрд▓рд╛рдЬ\nтАв рдордзреБрдореЗрд╣, рд░рдХреНрддрдЪрд╛рдк рдХреА рдЬрд╛рдирдХрд╛рд░реА\nтАв рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рдХреА рджреЗрдЦрднрд╛рд▓\nтАв рдмрдЪреНрдЪреЛрдВ рдХреЗ рдЯреАрдХрд╛рдХрд░рдг\nтАв рдкреЛрд╖рдг рдФрд░ рд╕реНрд╡рд╕реНрде рднреЛрдЬрди\nтАв рд╢рд┐рдХреНрд╖рд╛ рд╕рдВрдмрдВрдзреА рд╕рд▓рд╛рд╣"
        };
    }
    
    // Check for health keywords
    const hasHealthKeywords = healthKeywords.some(keyword => 
        queryLower.includes(keyword)
    );
    
    // If query seems to be a greeting or general question, guide towards health
    const greetings = ['hello', 'hi', 'рдирдорд╕реНрддреЗ', 'рд╣реИрд▓реЛ', 'рдХреИрд╕реЗ рд╣реИрдВ', 'how are you'];
    const isGreeting = greetings.some(greeting => queryLower.includes(greeting));
    
    if (isGreeting) {
        return {
            isValid: true // Allow greetings
        };
    }
    
    if (!hasHealthKeywords && queryLower.length > 10) {
        return {
            isValid: false,
            redirectMessage: "рдХреГрдкрдпрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдпрд╛ рд╢рд┐рдХреНрд╖рд╛ рд╕реЗ рд╕рдВрдмрдВрдзрд┐рдд рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВред ЁЯПеЁЯУЪ\n\nрдореИрдВ рдЧреНрд░рд╛рдореАрдг рдХреНрд╖реЗрддреНрд░реЛрдВ рдХреЗ рд▓реЛрдЧреЛрдВ рдХреЗ рд▓рд┐рдП рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдЖрдк рдореБрдЭрд╕реЗ рдмреАрдорд╛рд░рд┐рдпреЛрдВ, рдЗрд▓рд╛рдЬ, рджрд╡рд╛рдЗрдпреЛрдВ, рдкреЛрд╖рдг, рдпрд╛ рд╢рд┐рдХреНрд╖рд╛ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВред"
        };
    }
    
    return { isValid: true };
}

function generateRuralFallbackResponse(query) {
    const queryLower = query.toLowerCase();
    
    // Rural-focused health responses in simple Hindi
    const ruralHealthResponses = {
        'рдмреБрдЦрд╛рд░': 'рдмреБрдЦрд╛рд░ рдореЗрдВ:\nтАв рдкрд░реНрдпрд╛рдкреНрдд рдЖрд░рд╛рдо рдХрд░реЗрдВ\nтАв рддрд░рд▓ рдкрджрд╛рд░реНрде рдкрд┐рдПрдВ (рдкрд╛рдиреА, рджрд╛рд▓ рдХрд╛ рдкрд╛рдиреА)\nтАв рдЧреАрд▓реА рдкрдЯреНрдЯреА рдорд╛рдереЗ рдкрд░ рд░рдЦреЗрдВ\nтАв 3 рджрд┐рди рд╕реЗ рдЬреНрдпрд╛рджрд╛ рдмреБрдЦрд╛рд░ рд╣реЛ рддреЛ рдбреЙрдХреНрдЯрд░ рдХреЛ рджрд┐рдЦрд╛рдПрдВ\nтАв рддреБрд▓рд╕реА рдФрд░ рдЕрджрд░рдХ рдХрд╛ рдХрд╛рдврд╝рд╛ рдкрд┐рдПрдВ',
        
        'рджрд╕реНрдд': 'рджрд╕реНрдд рдХрд╛ рдЗрд▓рд╛рдЬ:\nтАв ORS рдХрд╛ рдШреЛрд▓ рдкрд┐рдПрдВ (рдЪреАрдиреА-рдирдордХ рдХрд╛ рдкрд╛рдиреА)\nтАв рдХреЗрд▓рд╛, рджрд╣реА, рдЪрд╛рд╡рд▓ рдЦрд╛рдПрдВ\nтАв рддрд▓реА-рднреБрдиреА рдЪреАрдЬреЗрдВ рди рдЦрд╛рдПрдВ\nтАв рд╕рд╛рдл рдкрд╛рдиреА рдкрд┐рдПрдВ\nтАв рдЬреНрдпрд╛рджрд╛ рджрд╕реНрдд рд╣реЛ рддреЛ рдбреЙрдХреНрдЯрд░ рд╕реЗ рдорд┐рд▓реЗрдВ',
        
        'рдЦрд╛рдВрд╕реА': 'рдЦрд╛рдВрд╕реА рдХреЗ рд▓рд┐рдП:\nтАв рд╢рд╣рдж рдФрд░ рдЕрджрд░рдХ рдХрд╛ рдорд┐рд╢реНрд░рдг рд▓реЗрдВ\nтАв рдЧрд░реНрдо рдкрд╛рдиреА рд╕реЗ рдЧрд░рд╛рд░реЗ рдХрд░реЗрдВ\nтАв рддреБрд▓рд╕реА рдХреА рдЪрд╛рдп рдкрд┐рдПрдВ\nтАв рдзреВрдореНрд░рдкрд╛рди рд╕реЗ рдмрдЪреЗрдВ\nтАв 2 рд╕рдкреНрддрд╛рд╣ рд╕реЗ рдЬреНрдпрд╛рджрд╛ рдЦрд╛рдВрд╕реА рд╣реЛ рддреЛ рдбреЙрдХреНрдЯрд░ рдХреЛ рджрд┐рдЦрд╛рдПрдВ',
        
        'рдордзреБрдореЗрд╣': 'рдордзреБрдореЗрд╣ (рд╢реБрдЧрд░) рдореЗрдВ:\nтАв рд╕рдордп рдкрд░ рдЦрд╛рдирд╛ рдЦрд╛рдПрдВ\nтАв рдорд┐рдард╛рдИ рдХрдо рдЦрд╛рдПрдВ\nтАв рд░реЛрдЬ рдЯрд╣рд▓реЗрдВ\nтАв рдХрд░реЗрд▓рд╛, рдореЗрдереА рдХрд╛ рд╕реЗрд╡рди рдХрд░реЗрдВ\nтАв рдирд┐рдпрдорд┐рдд рдЬрд╛рдВрдЪ рдХрд░рд╛рдПрдВ\nтАв рдбреЙрдХреНрдЯрд░ рдХреА рджрд╡рд╛ рд╕рдордп рдкрд░ рд▓реЗрдВ',
        
        'рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛': 'рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рдореЗрдВ:\nтАв рдкреМрд╖реНрдЯрд┐рдХ рднреЛрдЬрди рд▓реЗрдВ (рджрд╛рд▓, рд╕рдмреНрдЬреА, рдлрд▓)\nтАв рдЖрдпрд░рди рдХреА рдЧреЛрд▓реА рд▓реЗрдВ\nтАв рдирд┐рдпрдорд┐рдд рдЬрд╛рдВрдЪ рдХрд░рд╛рдПрдВ\nтАв рднрд╛рд░реА рдХрд╛рдо рди рдХрд░реЗрдВ\nтАв рддрдВрдмрд╛рдХреВ-рд╢рд░рд╛рдм рд╕реЗ рдмрдЪреЗрдВ\nтАв ANM рдпрд╛ рдбреЙрдХреНрдЯрд░ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдВ',
        
        'рдЯреАрдХрд╛': 'рдмрдЪреНрдЪреЛрдВ рдХреЗ рдЯреАрдХреЗ:\nтАв рдЬрдиреНрдо рдХреЗ рд╕рдордп: BCG, OPV\nтАв 6 рд╕рдкреНрддрд╛рд╣: DPT, OPV, Hepatitis B\nтАв рд╕рднреА рдЯреАрдХреЗ рд╕рдордп рдкрд░ рд▓рдЧрд╡рд╛рдПрдВ\nтАв рдЯреАрдХрд╛рдХрд░рдг рдХрд╛рд░реНрдб рд╕рдВрднрд╛рд▓ рдХрд░ рд░рдЦреЗрдВ\nтАв ANM рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ'
    };
    
    // Check for specific conditions
    for (const [condition, response] of Object.entries(ruralHealthResponses)) {
        if (queryLower.includes(condition)) {
            return {
                message: response + "\n\nтЪая╕П рдЧрдВрднреАрд░ рд╕рдорд╕реНрдпрд╛ рдореЗрдВ рддреБрд░рдВрдд рдбреЙрдХреНрдЯрд░ рдпрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХреЗрдВрджреНрд░ рдЬрд╛рдПрдВред",
                confidence: 0.70,
                category: 'health',
                language: language
            };
        }
    }
    
    // Return default message in detected language
    const defaultMessages = {
        'hindi': "рдЧреНрд░рд╛рдореАрдг рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХ ЁЯПе\n\nрдореИрдВ рдЖрдкрдХреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдВрдмрдВрдзреА рд╕рдорд╕реНрдпрд╛рдУрдВ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред рдХреГрдкрдпрд╛ рдмрддрд╛рдПрдВ:\n\nтАв рдЖрдкрдХреЛ рдХреМрди рд╕реА рд╕рдорд╕реНрдпрд╛ рд╣реИ?\nтАв рдХрд┐рддрдиреЗ рджрд┐рди рд╕реЗ рд╣реИ?\nтАв рдХреНрдпрд╛ рд▓рдХреНрд╖рдг рд╣реИрдВ?\n\nЁЯУЮ рдЖрдкрд╛рддрдХрд╛рд▓ рдореЗрдВ: 108 рдбрд╛рдпрд▓ рдХрд░реЗрдВ\nЁЯПе рдирдЬрджреАрдХреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХреЗрдВрджреНрд░ рдпрд╛ ANM рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ\n\nтЪая╕П рдпрд╣ рд╕рд▓рд╛рд╣ рдбреЙрдХреНрдЯрд░ рдХреА рдЬрдЧрд╣ рдирд╣реАрдВ рд╣реИред",
        'english': "Rural Health Assistant ЁЯПе\n\nI can help with your health concerns. Please tell me:\n\nтАв What problem do you have?\nтАв Since how many days?\nтАв What are the symptoms?\n\nЁЯУЮ Emergency: Dial 108\nЁЯПе Contact nearest health center or ANM\n\nтЪая╕П This advice doesn't replace a doctor.",
        'hinglish': "рдЧреНрд░рд╛рдореАрдг рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХ ЁЯПе / Rural Health Assistant\n\nрдореИрдВ рдЖрдкрдХреА health problems рдореЗрдВ help рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред Please рдмрддрд╛рдПрдВ:\n\nтАв рдЖрдкрдХреЛ рдХреМрди рд╕реА problem рд╣реИ?\nтАв рдХрд┐рддрдиреЗ days рд╕реЗ рд╣реИ?\nтАв рдХреНрдпрд╛ symptoms рд╣реИрдВ?\n\nЁЯУЮ Emergency рдореЗрдВ: 108 dial рдХрд░реЗрдВ\nЁЯПе Nearest health center рдпрд╛ ANM рд╕реЗ contact рдХрд░реЗрдВ\n\nтЪая╕П рдпрд╣ advice doctor рдХреА рдЬрдЧрд╣ рдирд╣реАрдВ рд╣реИред"
    };
    
    return {
        message: defaultMessages[language] || defaultMessages['hinglish'],
        confidence: 0.60,
        category: 'health',
        language: language
    };
}

// Enhanced language-aware redirect messages
function getLocalizedRedirectMessage(language = 'hinglish') {
    const redirectMessages = {
        'hindi': "рдорд╛рдлрд╝ рдХреАрдЬрд┐рдП, рдореИрдВ рдХреЗрд╡рд▓ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдВрдмрдВрдзреА рдкреНрд░рд╢реНрдиреЛрдВ рдХрд╛ рдЙрддреНрддрд░ рджреЗ рд╕рдХрддрд╛ рд╣реВрдБред ЁЯПе\n\nрдХреГрдкрдпрд╛ рдХреЛрдИ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдВрдмрдВрдзреА рд╕рдорд╕реНрдпрд╛ рдпрд╛ рдмреАрдорд╛рд░реА рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВред",
        'english': "Sorry, I can only answer health-related questions. ЁЯПе\n\nPlease ask about any health problem or medical condition.",
        'hinglish': "рдорд╛рдлрд╝ рдХреАрдЬрд┐рдП, рдореИрдВ рдХреЗрд╡рд▓ health related questions рдХрд╛ answer рджреЗ рд╕рдХрддрд╛ рд╣реВрдБред ЁЯПе\n\nPlease рдХреЛрдИ health problem рдпрд╛ medical condition рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВред"
    };
    
    return redirectMessages[language] || redirectMessages['hinglish'];
}